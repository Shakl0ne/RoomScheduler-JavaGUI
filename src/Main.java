
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.sql.Date;
import java.util.List;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shaco
 */
public class Main extends javax.swing.JDialog {


    /**
     * Creates new form Main
     */
    public Main(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        rebuildFacultyComboBoxes();
        rebuildDateComboBoxes();
        rebuildRoomComboBox();

    }
    
    public void rebuildFacultyComboBoxes(){
        ReserveFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getAllFaculty().toArray()));
        FacultyStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getAllFaculty().toArray()));
    }
    
    public void rebuildDateComboBoxes(){
        ReserveDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        ReservationStatusDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        WaitlistStatusDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        DateStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
    }

    public void rebuildRoomComboBox(){
        List<String> rooms = new ArrayList<String>();
        for (int i = 0;i < RoomQueries.getAllPossibleRooms().size();i++){
            rooms.add(RoomQueries.getAllPossibleRooms().get(i).getName());
            
        }
        DropRoomComboBox.setModel(new javax.swing.DefaultComboBoxModel(rooms.toArray()));
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RoomSchedulerLabel = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        AddFacultyNameLabel = new javax.swing.JLabel();
        AddFacultyNameTextField = new javax.swing.JTextField();
        AddFacultyButton = new javax.swing.JButton();
        AddRoomNameLabel = new javax.swing.JLabel();
        NumOfSeatsLabel = new javax.swing.JLabel();
        AddRoomButton = new javax.swing.JButton();
        AddDateButton = new javax.swing.JButton();
        NumOfSeatsTextField = new javax.swing.JTextField();
        AddRoomNameTextField = new javax.swing.JTextField();
        AddDateLabel = new javax.swing.JLabel();
        AddDateSpinner = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        AddStatusTextArea = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        DropRoomLabel = new javax.swing.JLabel();
        DropButton = new javax.swing.JButton();
        DropRoomComboBox = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        DropStatusTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        ReserveFacultyComboBox = new javax.swing.JComboBox<>();
        ReserveDateComboBox = new javax.swing.JComboBox<>();
        ReserveFacultyLabel = new javax.swing.JLabel();
        ReserveDateLabel = new javax.swing.JLabel();
        ReserveSeatsRequiredLabel = new javax.swing.JLabel();
        ReserveReserveButton = new javax.swing.JButton();
        ReserveSeatsRequiredTextField = new javax.swing.JTextField();
        ReserveCancelButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        ReserveStatusTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        ReservationStatusCheckButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReservationStatusTextArea = new javax.swing.JTextArea();
        ReservationStatusDateComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        WaitlistStatusCheckButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        WaitlistStatusTextArea = new javax.swing.JTextArea();
        WaitlistStatusDateComboBox = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        FacultyStatusComboBox = new javax.swing.JComboBox<>();
        FacultyStatusCheckButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        FacultyStatusTextArea = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        DateStatusComboBox = new javax.swing.JComboBox<>();
        DateStatusCheckButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        DateStatusTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        RoomSchedulerLabel.setFont(new java.awt.Font("Batang", 1, 36)); // NOI18N
        RoomSchedulerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RoomSchedulerLabel.setText("Room Scheduler");
        RoomSchedulerLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 51)));

        AddFacultyNameLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        AddFacultyNameLabel.setText("Faculty Name:");

        AddFacultyNameTextField.setColumns(10);
        AddFacultyNameTextField.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N

        AddFacultyButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        AddFacultyButton.setText("Submit");
        AddFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFacultyButtonActionPerformed(evt);
            }
        });

        AddRoomNameLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        AddRoomNameLabel.setText("Room Name:");

        NumOfSeatsLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        NumOfSeatsLabel.setText("# of Seats:");

        AddRoomButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        AddRoomButton.setText("Submit");
        AddRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRoomButtonActionPerformed(evt);
            }
        });

        AddDateButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        AddDateButton.setText("Submit");
        AddDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDateButtonActionPerformed(evt);
            }
        });

        NumOfSeatsTextField.setColumns(10);
        NumOfSeatsTextField.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N

        AddRoomNameTextField.setColumns(10);
        AddRoomNameTextField.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N

        AddDateLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        AddDateLabel.setText("Date:");

        AddDateSpinner.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        AddDateSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.AM_PM));

        AddStatusTextArea.setEditable(false);
        AddStatusTextArea.setColumns(20);
        AddStatusTextArea.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        AddStatusTextArea.setRows(5);
        jScrollPane4.setViewportView(AddStatusTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(AddFacultyNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(AddFacultyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(52, 52, 52)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddRoomNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddRoomNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NumOfSeatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NumOfSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(AddFacultyNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddDateSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(AddDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddDateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddFacultyNameLabel)
                    .addComponent(AddDateLabel)
                    .addComponent(AddRoomNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddDateSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(AddRoomNameTextField)
                    .addComponent(AddFacultyNameTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumOfSeatsLabel)
                    .addComponent(AddDateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddFacultyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumOfSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(218, Short.MAX_VALUE))
        );

        Tab.addTab("Add", jPanel1);

        DropRoomLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        DropRoomLabel.setText("Room:");

        DropButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        DropButton.setText("Drop");
        DropButton.setPreferredSize(new java.awt.Dimension(73, 31));
        DropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropButtonActionPerformed(evt);
            }
        });

        DropRoomComboBox.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        DropRoomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DropStatusTextArea.setEditable(false);
        DropStatusTextArea.setColumns(20);
        DropStatusTextArea.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        DropStatusTextArea.setRows(5);
        jScrollPane5.setViewportView(DropStatusTextArea);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(DropButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(DropRoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DropRoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 562, Short.MAX_VALUE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DropRoomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DropRoomComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DropButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(332, Short.MAX_VALUE))
        );

        Tab.addTab("Drop", jPanel6);

        ReserveFacultyComboBox.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ReserveDateComboBox.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ReserveFacultyLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveFacultyLabel.setText("Faculty:");

        ReserveDateLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveDateLabel.setText("Date:");

        ReserveSeatsRequiredLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveSeatsRequiredLabel.setText("Seats required:");

        ReserveReserveButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveReserveButton.setForeground(new java.awt.Color(0, 0, 204));
        ReserveReserveButton.setText("Reserve");
        ReserveReserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReserveReserveButtonActionPerformed(evt);
            }
        });

        ReserveSeatsRequiredTextField.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveSeatsRequiredTextField.setText("    ");

        ReserveCancelButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveCancelButton.setForeground(new java.awt.Color(255, 51, 51));
        ReserveCancelButton.setText("Cancel");
        ReserveCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReserveCancelButtonActionPerformed(evt);
            }
        });

        ReserveStatusTextArea.setEditable(false);
        ReserveStatusTextArea.setColumns(20);
        ReserveStatusTextArea.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReserveStatusTextArea.setRows(5);
        jScrollPane6.setViewportView(ReserveStatusTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ReserveReserveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(ReserveCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ReserveFacultyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ReserveDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ReserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ReserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(ReserveSeatsRequiredLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ReserveSeatsRequiredTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReserveFacultyComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(ReserveFacultyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReserveDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ReserveSeatsRequiredLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReserveSeatsRequiredTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReserveReserveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReserveCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        Tab.addTab("Reserve", jPanel2);

        ReservationStatusCheckButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReservationStatusCheckButton.setText("Check ");
        ReservationStatusCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservationStatusCheckButtonActionPerformed(evt);
            }
        });

        ReservationStatusTextArea.setEditable(false);
        ReservationStatusTextArea.setColumns(20);
        ReservationStatusTextArea.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReservationStatusTextArea.setRows(5);
        jScrollPane1.setViewportView(ReservationStatusTextArea);

        ReservationStatusDateComboBox.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        ReservationStatusDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ReservationStatusDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReservationStatusCheckButton)
                        .addGap(0, 525, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReservationStatusCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReservationStatusDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        Tab.addTab("ReservationStatus", jPanel3);

        WaitlistStatusCheckButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        WaitlistStatusCheckButton.setText("Check ");
        WaitlistStatusCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaitlistStatusCheckButtonActionPerformed(evt);
            }
        });

        WaitlistStatusTextArea.setEditable(false);
        WaitlistStatusTextArea.setColumns(20);
        WaitlistStatusTextArea.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        WaitlistStatusTextArea.setRows(5);
        jScrollPane2.setViewportView(WaitlistStatusTextArea);

        WaitlistStatusDateComboBox.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        WaitlistStatusDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(WaitlistStatusDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WaitlistStatusCheckButton)
                        .addGap(0, 525, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(WaitlistStatusDateComboBox)
                    .addComponent(WaitlistStatusCheckButton, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        Tab.addTab("WaitlistStatus", jPanel4);

        FacultyStatusComboBox.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        FacultyStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        FacultyStatusCheckButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        FacultyStatusCheckButton.setText("Check ");
        FacultyStatusCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FacultyStatusCheckButtonActionPerformed(evt);
            }
        });

        FacultyStatusTextArea.setEditable(false);
        FacultyStatusTextArea.setColumns(20);
        FacultyStatusTextArea.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        FacultyStatusTextArea.setRows(5);
        jScrollPane3.setViewportView(FacultyStatusTextArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(FacultyStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FacultyStatusCheckButton)
                        .addGap(0, 525, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FacultyStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FacultyStatusCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        Tab.addTab("FacultyStatus", jPanel5);

        DateStatusComboBox.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        DateStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DateStatusCheckButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        DateStatusCheckButton.setText("Check ");
        DateStatusCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateStatusCheckButtonActionPerformed(evt);
            }
        });

        DateStatusTextArea.setEditable(false);
        DateStatusTextArea.setColumns(20);
        DateStatusTextArea.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        DateStatusTextArea.setRows(5);
        jScrollPane7.setViewportView(DateStatusTextArea);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(DateStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateStatusCheckButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateStatusCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        Tab.addTab("DateStatus", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Tab))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(RoomSchedulerLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(RoomSchedulerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tab)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddFacultyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFacultyButtonActionPerformed
        // TODO add your handling code here:
        String name = AddFacultyNameTextField.getText();
        Faculty.addFaculty(name);
        AddStatusTextArea.setText(name+" has been added to the faculty\n");

        rebuildFacultyComboBoxes();

    }//GEN-LAST:event_AddFacultyButtonActionPerformed

    private void ReservationStatusCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservationStatusCheckButtonActionPerformed
        // TODO add your handling code here:
        ReservationStatusTextArea.setText("");
        Date date = (Date) ReservationStatusDateComboBox.getSelectedItem();
        List<ReservationEntry> reservations = ReservationQueries.getReservationsByDate(date);
        ReservationStatusTextArea.append("Faculty     "+"Room     "+"Date     "+"Seats     "+"Timestamp    "+"\n");
        for (int i = 0; i < reservations.size (); i++){
            ReservationStatusTextArea.append(reservations.get(i).getFaculty()
                    +"    "+reservations.get(i).getRoom()
                    +"    "+reservations.get(i).getDate()
                    +"    "+reservations.get(i).getSeats()
                    +"    "+reservations.get(i).getTimestamp()+"\n");          
        }

    }//GEN-LAST:event_ReservationStatusCheckButtonActionPerformed

    private void WaitlistStatusCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaitlistStatusCheckButtonActionPerformed
        // TODO add your handling code here:
        WaitlistStatusTextArea.setText("");
        Date date = (Date) WaitlistStatusDateComboBox.getSelectedItem();
        List<WaitlistEntry> waitlists = WaitlistQueries.getWaitlistByDate(date);
        WaitlistStatusTextArea.append("Faculty     "+"Date     "+"Seats     "+"Timestamp    "+"\n");
        for (int i = 0; i < waitlists.size (); i++){
            WaitlistStatusTextArea.append(waitlists.get(i).getFaculty()
                    +"    "+waitlists.get(i).getDate()
                    +"    "+waitlists.get(i).getSeats()
                    +"    "+waitlists.get(i).getTimestamp()+"\n");          
        }

    }//GEN-LAST:event_WaitlistStatusCheckButtonActionPerformed

    private void AddRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRoomButtonActionPerformed
        // TODO add your handling code here:
        String room = AddRoomNameTextField.getText();
        int seats = Integer.valueOf(NumOfSeatsTextField.getText().trim());
        java.sql.Timestamp timestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        RoomQueries.addRoom(room, seats);
        AddStatusTextArea.setText("Room " + room + " has been added \n");

        List<Date> allDates = Dates.getAllDates();
        for (int i = 0;i < allDates.size();i++){
            List<WaitlistEntry> waitlists = WaitlistQueries.getWaitlistByDate(allDates.get(i));
            for (int j = 0; j < waitlists.size(); j++){
                if (waitlists.get(j).getSeats() <= seats){
                    ReservationQueries.addReservationEntry(waitlists.get(j).getFaculty(), room, allDates.get(i), seats, timestamp);
                    WaitlistQueries.deleteWaitlistEntry(waitlists.get(j).getFaculty(), allDates.get(i));
                    AddStatusTextArea.append(waitlists.get(j).getFaculty().toString()+" reserves room " + room + " for " + allDates.get(i)+"\n");
                    break;
                
                }
            }
        }

        rebuildRoomComboBox();
    }//GEN-LAST:event_AddRoomButtonActionPerformed

    private void AddDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDateButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        String spinnerValue = formater.format(AddDateSpinner.getValue());
        Date day = Date.valueOf(spinnerValue);
        Dates.addDate(day);
        AddStatusTextArea.setText("Date "+day+" has been added \n");

        rebuildDateComboBoxes();
    }//GEN-LAST:event_AddDateButtonActionPerformed

    private void FacultyStatusCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FacultyStatusCheckButtonActionPerformed
        // TODO add your handling code here:
        FacultyStatusTextArea.setText("");
        String faculty = FacultyStatusComboBox.getSelectedItem().toString();
        List<ReservationEntry> reservations = ReservationQueries.getReservationsByFaculty(faculty);
        for (int i = 0; i < reservations.size(); i++){
            FacultyStatusTextArea.append(faculty+" reserved room " + reservations.get(i).getRoom()+" on "+ reservations.get(i).getDate()+"\n");
        }
        List<WaitlistEntry> waitlists = WaitlistQueries.getWaitlistByFaculty(faculty);
        for (int i = 0; i < waitlists.size(); i++){
            FacultyStatusTextArea.append(faculty+" is waitlisted for "+reservations.get(i).getSeats()+" seats on "+ reservations.get(i).getDate()+"\n");
        }
        
    }//GEN-LAST:event_FacultyStatusCheckButtonActionPerformed

    private void DropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropButtonActionPerformed
        // TODO add your handling code here:
// The Drop command must remove a room from the application. Any faculty members
//that had this room reserved for any Date will get another room reserved for that Date if
//possible, in priority sequence, and the new reservation reported to the user. If the
//faculty member cannot get a new room reserved, the user is informed that the faculty
//member could not get a new room reserved and that they have been placed on the
//waitlist.
        String name = DropRoomComboBox.getSelectedItem().toString();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        List<String> rooms = new ArrayList<String>();
        List<String> temp = new ArrayList<String>();
        
        RoomQueries.dropRoom(name);
        DropStatusTextArea.setText("Room " + name + " gets dropped \n");
        
        for (int x = 0;x < RoomQueries.getAllPossibleRooms().size();x++){
            rooms.add(RoomQueries.getAllPossibleRooms().get(x).getName());
        }
        
        for (int i = 0;i < Dates.getAllDates().size();i++){
            for (int j = 0 ; j < ReservationQueries.getReservationsByDate(Dates.getAllDates().get(i)).size(); j++){
                if (ReservationQueries.getReservationsByDate(Dates.getAllDates().get(i)).get(j).getRoom().equals(name)){
                    
                    String faculty = ReservationQueries.getReservationsByDate(Dates.getAllDates().get(i)).get(j).getFaculty();
                    Integer seats = ReservationQueries.getReservationsByDate(Dates.getAllDates().get(i)).get(j).getSeats();
                    
                    ReservationQueries.deleteReservation(ReservationQueries.getReservationsByDate(Dates.getAllDates().get(i)).get(j).getFaculty(), Dates.getAllDates().get(i));
                    
                    for (ReservationEntry object: ReservationQueries.getReservationsByDate(Dates.getAllDates().get(i))){
                        temp.add(object.getRoom());
                    }
                    
                    boolean reservationResult = false;
                    
                    for (String room:rooms){
                        if (!temp.contains(room)){
                            ReservationQueries.addReservationEntry(faculty, room, Dates.getAllDates().get(i), seats, timestamp);
                            DropStatusTextArea.append(faculty+" is moved to room "+room+" on "+ Dates.getAllDates().get(i)+"\n");
                            reservationResult = true;
                            break;
                        }
                    }
                    if (reservationResult == false){
                        WaitlistQueries.addWaitlistEntry(faculty, Dates.getAllDates().get(i), seats, timestamp);
                        DropStatusTextArea.append(faculty+" gets moved to the waitlist \n");
                    }
                    
                    break; 
                }
            }
        }
            
     
        
    }//GEN-LAST:event_DropButtonActionPerformed

    private void DateStatusCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateStatusCheckButtonActionPerformed
        // TODO add your handling code here:
        DateStatusTextArea.setText("");
        Date date = (Date) DateStatusComboBox.getSelectedItem();
        List<ReservationEntry> reservations = ReservationQueries.getReservationsByDate(date);
        for (int i = 0; i < reservations.size(); i++){
            DateStatusTextArea.append(reservations.get(i).getFaculty() +" reserved room " + reservations.get(i).getRoom()+"\n");
        }
        List<WaitlistEntry> waitlists = WaitlistQueries.getWaitlistByDate(date);
        for (int i = 0; i < waitlists.size(); i++){
            DateStatusTextArea.append(reservations.get(i).getFaculty() +" is waitlisted for "+reservations.get(i).getSeats()+" seats\n");
        }
        
    }//GEN-LAST:event_DateStatusCheckButtonActionPerformed

    private void ReserveCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReserveCancelButtonActionPerformed
        // TODO add your handling code here:

        String faculty = ReserveFacultyComboBox.getSelectedItem().toString();
        Date date = (Date) ReserveDateComboBox.getSelectedItem();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());

        boolean cancelResult = false;
        for (int i = 0;i < ReservationQueries.getReservationsByDate(date).size();i++){
            if (ReservationQueries.getReservationsByDate(date).get(i).getFaculty().equals(faculty)){
                String room = ReservationQueries.getReservationsByDate(date).get(i).getRoom();
                Integer seats = RoomQueries.getSeats(room);
                ReservationQueries.deleteReservation(faculty, date);
                cancelResult = true;
                ReserveStatusTextArea.setText(faculty+" cancelled reservation on " + date + "\n");
                
                if(!WaitlistQueries.getWaitlistByDate(date).isEmpty()){   
                    for (int j = 0; j < WaitlistQueries.getWaitlistByDate(date).size(); j++){
                        if (WaitlistQueries.getWaitlistByDate(date).get(j).getSeats() <= seats){
                            ReservationQueries.addReservationEntry(WaitlistQueries.getWaitlistByDate(date).get(j).getFaculty(), room, date, seats, timestamp);
                            ReserveStatusTextArea.append(WaitlistQueries.getWaitlistByDate(date).get(j).getFaculty() + " reserved room " + room + "\n");
                            WaitlistQueries.deleteWaitlistEntry(WaitlistQueries.getWaitlistByDate(date).get(j).getFaculty(), date);
                            break;
                        }
                    }
                }
                
                break;
            }
        }

        if (cancelResult == false){
            for (int k = 0;k < WaitlistQueries.getWaitlistByDate(date).size(); k++){
                if (WaitlistQueries.getWaitlistByDate(date).get(k).getFaculty().equals(faculty)){
                    WaitlistQueries.deleteWaitlistEntry(faculty, date);
                    ReserveStatusTextArea.setText(faculty+" cancelled from waitlist on " + date + "\n");
                    break;
                }
            }
        }

    }//GEN-LAST:event_ReserveCancelButtonActionPerformed

    private void ReserveReserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReserveReserveButtonActionPerformed
        // TODO add your handling code here:
        String faculty = ReserveFacultyComboBox.getSelectedItem().toString();
        Date date = (Date) ReserveDateComboBox.getSelectedItem();
        int seats = Integer.valueOf(ReserveSeatsRequiredTextField.getText().trim());
        java.sql.Timestamp timestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());

        List<String> rooms = new ArrayList<String>();
        List<String> temp = new ArrayList<String>();

        for (int i = 0;i < RoomQueries.getAllPossibleRooms().size();i++){
            if  (seats <= RoomQueries.getAllPossibleRooms().get(i).getSeats()){
                rooms.add(RoomQueries.getAllPossibleRooms().get(i).getName());
            }
        }

        for (ReservationEntry x: ReservationQueries.getReservationsByDate(date)){
            temp.add(x.getRoom());
        }

        boolean reservationResult = false;

        for (String room:rooms){
            if (!temp.contains(room)){
                ReservationQueries.addReservationEntry(faculty, room, date, seats, timestamp);
                ReserveStatusTextArea.setText(faculty+" reserves room " + room + "\n");
                reservationResult = true;
                break;
            }
        }
        if (reservationResult == false){
            WaitlistQueries.addWaitlistEntry(faculty, date, seats, timestamp);
            ReserveStatusTextArea.setText(faculty+" gets waitlisted\n");
        }
    }//GEN-LAST:event_ReserveReserveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main dialog = new Main(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDateButton;
    private javax.swing.JLabel AddDateLabel;
    private javax.swing.JSpinner AddDateSpinner;
    private javax.swing.JButton AddFacultyButton;
    private javax.swing.JLabel AddFacultyNameLabel;
    private javax.swing.JTextField AddFacultyNameTextField;
    private javax.swing.JButton AddRoomButton;
    private javax.swing.JLabel AddRoomNameLabel;
    private javax.swing.JTextField AddRoomNameTextField;
    private javax.swing.JTextArea AddStatusTextArea;
    private javax.swing.JButton DateStatusCheckButton;
    private javax.swing.JComboBox<String> DateStatusComboBox;
    private javax.swing.JTextArea DateStatusTextArea;
    private javax.swing.JButton DropButton;
    private javax.swing.JComboBox<String> DropRoomComboBox;
    private javax.swing.JLabel DropRoomLabel;
    private javax.swing.JTextArea DropStatusTextArea;
    private javax.swing.JButton FacultyStatusCheckButton;
    private javax.swing.JComboBox<String> FacultyStatusComboBox;
    private javax.swing.JTextArea FacultyStatusTextArea;
    private javax.swing.JLabel NumOfSeatsLabel;
    private javax.swing.JTextField NumOfSeatsTextField;
    private javax.swing.JButton ReservationStatusCheckButton;
    private javax.swing.JComboBox<String> ReservationStatusDateComboBox;
    private javax.swing.JTextArea ReservationStatusTextArea;
    private javax.swing.JButton ReserveCancelButton;
    private javax.swing.JComboBox<String> ReserveDateComboBox;
    private javax.swing.JLabel ReserveDateLabel;
    private javax.swing.JComboBox<String> ReserveFacultyComboBox;
    private javax.swing.JLabel ReserveFacultyLabel;
    private javax.swing.JButton ReserveReserveButton;
    private javax.swing.JLabel ReserveSeatsRequiredLabel;
    private javax.swing.JTextField ReserveSeatsRequiredTextField;
    private javax.swing.JTextArea ReserveStatusTextArea;
    private javax.swing.JLabel RoomSchedulerLabel;
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JButton WaitlistStatusCheckButton;
    private javax.swing.JComboBox<String> WaitlistStatusDateComboBox;
    private javax.swing.JTextArea WaitlistStatusTextArea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}
